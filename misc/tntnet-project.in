#!/bin/sh

EMAIL=your-email@somewhere

usage()
{
    cat <<EOF
Usage: $0 [-l <template>] <projectname>
       $0 -l

Options:
  -t <template>, --template=<template>   specify template
  -l, --list                             list templates

EOF

    exit $1
}

error()
{
    echo "error: $1"
    echo "use \`$0 --help\` for usage information"
    exit 1
}

list()
{
    ls $TEMPLATEDIR
    [ -d $USERTEMPLATEDIR ] && ls $USERTEMPLATEDIR
}

checkProc()
{
    echo checking for $2
    if ! which $1 >/dev/null 2>&1
    then
        echo ERROR: $2 not installed
        exit 1
    fi
}

checkSystem()
{
    if [ -e "$1" ]
    then
        echo ERROR: $1 does already exist
        exit 1
    fi
    checkProc autoreconf autoconf
    checkProc automake   automake
}

prefix=@prefix@
TEMPLATEDIR=@datarootdir@/tntnet/template
USERTEMPLATEDIR=~/.tntnet/template

########################################################################
# main
#
while [ $# -gt 0 ]
do
    arg=$1
    shift

    case "$arg" in
        --help|-h)
            usage
            exit 0
            ;;

        --*=*)
            optarg=`echo "$arg" | @SED@ 's/[-_a-zA-Z0-9]*=//'`
            ;;

        -*)
            optarg=$1
            shift
            ;;
    esac

    case "$arg" in
        --template=*|-t)
            TEMPLATE=$optarg
            ;;

        --list|-l)
            LIST=1
            ;;

        -*)
            error "unkown option \`$arg\`"
            ;;

        *)
            if [ -n "$project" ]
                then
                error "multiple project names specified"
            fi
            project=$arg
            ;;
    esac
done

if [ "$LIST" ]
then
    list
    exit 0
fi

if [ -z "$project" ]
    then
    error "no project name specified"
fi

if [ -z "$TEMPLATE" ]
then
    TEMPLATE="default"
fi

if [ -e "$USERTEMPLATEDIR/$TEMPLATE" ]
then
    TDIR="$USERTEMPLATEDIR/$TEMPLATE"
else
    TDIR="$TEMPLATEDIR/$TEMPLATE"
fi

if [ ! -d "$TDIR" ]
then
    error "template $TEMPLATE not found"
fi

echo project=$project template=$TDIR

if [ -d "$project" ]
then
    error "directory $project already exists"
fi

checkSystem $project

mkdir "$project"
cd "$project"
cproject=$(echo $project|@SED@ 's/-/_/g')

# create directory structure
for D in $(cd "$TDIR"; find . -type d|grep -v '^\.$')
do
    T=$(echo $D|@SED@ "s/@PROJECT@/$project/g; s/@CPROJECT@/$cproject/g")
    echo "$T"
    mkdir "$T"
done

# copy files
for F in $(cd "$TDIR"; find . -type f|grep -v '^\.$')
do
    T=$(echo $F|@SED@ "s/@PROJECT@/$project/g; s/@CPROJECT@/$cproject/g")
    echo "$T"
    @SED@ "s/@PROJECT@/$project/g; s/@CPROJECT@/$cproject/g" < "$TDIR/$F" > "$T"
done

if [ -f configure.ac ]
then
    echo run autoreconf -i
    autoreconf -i

    echo "============================================================"
    echo "= project <$project> created"
    echo "= change to directory <$project> and run <./configure && make> to build the application"
    echo "= execute <./$project> there to run the application"
    echo "============================================================"
else
    echo "============================================================"
    echo "= project <$project> created"
    echo "============================================================"
fi
